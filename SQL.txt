------------------------------------------------------------------------------------------------------------------------
-- Note:
------------------------------------------------------------------------------------------------------------------------
-- Version of SQL server:
    Server version: 8.0.13 MySQL Community Server - GPL
-- Improvement can be done further by analysing execution plans which I didn't do

------------------------------------------------------------------------------------------------------------------------
-- Question 5
------------------------------------------------------------------------------------------------------------------------
--  A. Return the names of all salespeople that have an order with George
--  Alice and Bob
SELECT Salesperson.Name
    FROM Salesperson
    INNER JOIN Orders ON Orders.SalespersonID = Salesperson.SalespersonID
    INNER JOIN Customer ON Customer.CustomerID = Orders.CustomerID
    WHERE 
        Customer.Name = 'George';

--B. Return the names of all salespeople that do not have any order with George
-- Chris, Derek, Emmit, Fred
SELECT Salesperson.Name
    FROM Salesperson
    WHERE NOT EXISTS
    (
        SELECT Orders.SalespersonID
        FROM Orders
        INNER JOIN Customer ON Customer.CustomerID = Orders.CustomerID
        WHERE 
            Customer.Name = 'George'
			AND Orders.SalespersonID = Salesperson.SalespersonID 
    );
    
--C. Return the names of salespeople that have 2 or more orders.
-- Alice, Emmit
SELECT Name
    FROM
    (
        SELECT Salesperson.SalespersonID
            FROM Salesperson
            INNER JOIN Orders ON Orders.SalespersonID = Salesperson.SalespersonID
            GROUP BY Salesperson.SalespersonID
            HAVING COUNT(Orders.OrderID) > 1
    ) salespersonWithMoreThan2Orders
    INNER JOIN Salesperson ON Salesperson.SalespersonID = salespersonWithMoreThan2Orders.SalespersonID;

------------------------------------------------------------------------------------------------------------------------
-- Question 6
------------------------------------------------------------------------------------------------------------------------
-- A. Return the name of the salesperson with the 3rd highest salary.
SELECT Name
FROM
(
    SELECT Name, RANK() OVER (ORDER BY Salary DESC) RN
    FROM Salesperson
) SalaryRank
WHERE SalaryRank.RN = 3;

-- B. Create a new rollÂ­up table BigOrders(where columns are CustomerID,
--  TotalOrderValue), and insert into that table customers whose total Amount across all
--  orders is greater than 1000
INSERT INTO BigOrders
    SELECT CustomerID, SUM(TotalOrderValue) AS TotalOrderValue
    FROM
    (
        SELECT CustomerID, SUM(NumberOfUnits * CostOfUnit) AS TotalOrderValue
        FROM Orders
		GROUP BY CustomerID
        HAVING SUM(NumberOfUnits * CostOfUnit)  > 1000
    ) CustomerAndTotalOrderValue
	GROUP BY CustomerID WITH ROLLUP;

-- C. Return the total Amount of orders for each month, ordered by year, then month (both in
--  descending order)
SELECT YEAR(OrderDate) AS Year, MONTH(OrderDate) AS Month, SUM(NumberOfUnits * CostOfUnit) AS TotalAmountOfOrders
    FROM Orders
    GROUP BY YEAR(OrderDate), MONTH(OrderDate)
    ORDER BY YEAR(OrderDate) DESC, MONTH(OrderDate) DESC